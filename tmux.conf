# Quoc Hung Le's Tmux Configurations

# General Settings {{{
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user' # Local config
set -g mouse on                                                # Use Mouse
set -g history-limit 10000                                     # Bigger history
set -g bell-action any                                         # Ring the bell if any background window rang a bell
set -g renumber-windows on                                     # Renumber windows sequentially after closing any of them
set -sg escape-time 0                                          # No escape time for vi mode
set-option -ga terminal-overrides ",xterm-256color:Tc"         # Using True Color
set-option -g base-index 1                                     # Set first window to index 1 (not 0) to map more to the keyboard layout...
set-window-option -g pane-base-index 1
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'      # Cursor Shape change in tmux
# }}}

# Key Bindings {{{
unbind C-b                            # Set prefix key
set -g prefix C-a
bind a send-prefix
set -g status-keys vi                 # Use vi keybindings for tmux commandline input.
setw -g mode-keys vi                  # Use vi keybindings in copy and choice modes
unbind -t vi-copy Enter               # Update default binding of `Enter` to also use copy-pipe
bind-key -t vi-copy v begin-selection # Setup 'v' to begin selection as in Vim
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
bind-key ^D detach-client # Keep your finger on ctrl, or don't
unbind l                  # Screen like binding for last window
bind C-a last-window
unbind r                  # Reload of the config file
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded!"

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off
# }}}

# Splits & Panes Management {{{

# Pane resize in all four directions using vi bindings.
# Small Resizing
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Up resize-pane -U 1
bind -n S-Down resize-pane -D 1

# Fast Resizing
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Up resize-pane -U 5
bind -n C-Down resize-pane -D 5

# Selecting Panels without using prefix keys
bind-key -n C-h select-pane -L
bind-key -n C-l select-pane -R
bind-key -n C-j select-pane -U
bind-key -n C-k select-pane -D

# Create splits and vertical splits
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"

# Break pane into a single windows
bind-key b break-pane -d
bind-key C-j choose-tree

# Kill pane
bind K kill-pane

# Switching between tmux and vim splits seamlessly
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"
# }}}

# Status Bar {{{
# color scheme (styled as vim-powerline)
set-option -g status on

set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g status-right-length 451
set -g status-left-length 52
set -g status-left "#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold] #[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]"
set -g status-right "%a %h-%d %H:%M #[fg=black,bg=blue] ⓦ #(curl icanhazip.com) #[fg=black,bg=yellow] ⓛ #(ifconfig en1 | grep 'inet ' |awk '{print $2}') #[fg=black,bg=green] Batt: #{battery_icon} #{battery_percentage} #{battery_remain} "
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I:#W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=black,bg=colour39,noreverse,bold] #I:#W #[fg=colour39,bg=colour234,nobold]"

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
# }}}

# Plugins {{{
set -g @plugin 'tmux-plugins/tpm'            # Tmux Plugins Manager
set -g @plugin 'tmux-plugins/tmux-yank'      # Enables copying to system clipboard in Tmux
set -g @plugin 'tmux-plugins/tmux-sensible'  # A set of tmux options that should be acceptable to everyone
set -g @plugin 'tmux-plugins/tmux-copycat'   # Enhances tmux search
set -g @plugin 'tmux-plugins/tmux-resurrect' # Restore tmux environment after system restart.
set -g @plugin 'tmux-plugins/tmux-sidebar'   # Opens a tree directory listing for the current path
set -g @plugin 'tmux-plugins/tmux-battery'   # Plug and play battery percentage and icon indicator for Tmux<Paste>
set -g @plugin 'tmux-plugins/tmux-open'      # Tmux key bindings for quick opening of a highlighted file or url
set -g @plugin 'tmux-plugins/tmux-continuum' # Continuous saving of tmux environment

# Automatic Restore Tmux Environment
set -g @continuum-restore 'on'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# }}}

# vim:foldmethod=marker:foldlevel=0